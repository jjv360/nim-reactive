import std/tables
import std/strutils
import classes
import ./basecomponent


##
## Supported CSS property info
type CSSProperty = object
    propName: string
    cssName: string
    isPx: bool


##
## List of all supported CSS properties
let supportedCSS = @[

    # Position fields
    CSSProperty(propName: "top", isPx: true),
    CSSProperty(propName: "left", isPx: true),
    CSSProperty(propName: "bottom", isPx: true),
    CSSProperty(propName: "right", isPx: true),
    CSSProperty(propName: "width", isPx: true),
    CSSProperty(propName: "height", isPx: true),
    CSSProperty(propName: "position"),
    CSSProperty(propName: "zIndex", cssName: "z-index"),

    # Layout fields
    CSSProperty(propName: "display"),

    # Appearance fields
    CSSProperty(propName: "backgroundColor", cssName: "background-color"),

]


##
## Represents the HTML output of a component
class ReactiveHTMLOutput:

    ## HTML tag name
    var tagName = ""

    ## HTML tag ID (autogenerated)
    var privateTagID = ""

    ## HTML tag class name
    var tagClass = ""

    ## Attached CSS
    var css = ""

    ## True if it can have children
    var canHaveChildren = true

    ## Inner text for text elements
    var isTextElement = false
    var innerText = ""

    ## Set CSS from a property bag
    method setCSSFromProps(props: Table[string, ReactivePropertyItem]) =

        # Create text
        var css = ""

        # Go through all supported props
        for field in supportedCSS:

            # Get value
            let val = props{field.propName}
            if val == nil:
                continue

            # Get sanitized value string
            let valStr = val.string.replace(";", "")

            # Get CSS property name
            var cssName = field.cssName
            if cssName.len == 0:
                cssName = field.propName

            # Check if it needs the px extensino
            if field.isPx and val.isNumber:
                css = css & cssName & ": " & valStr & "px; "
            else:
                css = css & cssName & ": " & valStr & "; "

        # Done
        this.css = css